<?xml version="1.0"?>
<!--
     Some key mappings need Seil and Keyboard Meaestro
-->
<root>
  <appdef>
    <appname>OmniFocus</appname>
    <equal>com.omnigroup.OmniFocus2</equal>
  </appdef>
  <item>
    <name>Customized: General</name>
    <item>
      <name>Tab to Hyper Key or Escape</name>
      <identifier>private.tab2hyper_tab</identifier>
      <modifier_only>ModifierFlag::NONE</modifier_only>
      <autogen>
        --KeyOverlaidModifier--
        KeyCode::TAB,
        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
        KeyCode::TAB
      </autogen>
    </item>
    <item>
      <name>F19 to Ctrl or Escape</name>
      <identifier>private.f192ctrl_escape</identifier>
      <autogen>
        --KeyOverlaidModifier--
        KeyCode::F19,
        KeyCode::CONTROL_L,
        KeyCode::ESCAPE
      </autogen>
    </item>
    <item>
      <name>Delete to enclosing folder if you are not editing text</name>
      <appendix>For Finder</appendix>
      <identifier>remap.delete_enclosing_folder</identifier>

      <block>
        <only>
          FINDER,
        </only>
        <uielementrole_not>AXTextField, AXTextArea</uielementrole_not>
        <modifier_only>
          ModifierFlag::NONE,
          ModifierFlag::SHIFT_L | ModifierFlag::NONE,
          ModifierFlag::SHIFT_R | ModifierFlag::NONE,
        </modifier_only>
        <autogen>__KeyToKey__ KeyCode::DELETE, KeyCode::DELETE, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L</autogen>
      </block>
    </item>
    <item>
      <name>Enable Emacs-like ALT-F/B/D</name>
      <identifier>space_cadet.emacs_like_alt</identifier>
      <block>
        <uielementrole_only>AXTextField</uielementrole_only>
        <only>
          FINDER, MAIL
        </only>
        <modifier_only>
          ModifierFlag::OPTION_L | ModifierFlag::NONE
        </modifier_only>
        <autogen>
          __KeyToKey__
          KeyCode::F,
          KeyCode::CURSOR_RIGHT
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::B,
          KeyCode::CURSOR_LEFT
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::D,
          KeyCode::DELETE,
          ModifierFlag::FN
        </autogen>
      </block>
      <block>
        <only>
          GOOGLE_CHROME, SAFARI, FIREFOX
        </only>
        <modifier_only>
          ModifierFlag::OPTION_L | ModifierFlag::NONE
        </modifier_only>
        <autogen>
          __KeyToKey__
          KeyCode::F,
          KeyCode::CURSOR_RIGHT
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::B,
          KeyCode::CURSOR_LEFT
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::D,
          KeyCode::DELETE,
          ModifierFlag::FN
        </autogen>
      </block>
    </item>
  </item>
  <item>
    <name>Customized: Use "hjkl" keys as arrow keys if you are not editing text.</name>

    <item>
      <name>Enable in some standard apps.</name>
      <appendix>Supported Applications:</appendix>
      <appendix>- Finder, iPhoto, iTunes, Mail.app.</appendix>
      <appendix>- Activity Monitor.</appendix>
      <appendix>- System Preferences, Karabiner, Seil.</appendix>
      <identifier>remap.leon_hjkl_arrow</identifier>

      {{ HJKL_ARROW_EXTRA }}

      <block>
        <only>
          FINDER, IPHOTO, ITUNES, SYSTEM_PREFERENCES,
          Activity_Monitor,
          Karabiner, Seil
        </only>
        <uielementrole_not>AXTextField, AXTextArea</uielementrole_not>
        <modifier_only>
          ModifierFlag::NONE,
          ModifierFlag::SHIFT_L | ModifierFlag::NONE,
          ModifierFlag::SHIFT_R | ModifierFlag::NONE,
        </modifier_only>
        <autogen>__KeyToKey__ KeyCode::H, KeyCode::CURSOR_LEFT</autogen>
        <autogen>__KeyToKey__ KeyCode::J, KeyCode::CURSOR_DOWN</autogen>
        <autogen>__KeyToKey__ KeyCode::K, KeyCode::CURSOR_UP</autogen>
        <autogen>__KeyToKey__ KeyCode::L, KeyCode::CURSOR_RIGHT</autogen>
      </block>

      <block>
        <only>OmniFocus</only>
        <uielementrole_only>AXOutline</uielementrole_only>
        <modifier_only>
          ModifierFlag::NONE,
          ModifierFlag::SHIFT_L | ModifierFlag::NONE,
          ModifierFlag::SHIFT_R | ModifierFlag::NONE,
        </modifier_only>
        <autogen>__KeyToKey__ KeyCode::H, KeyCode::CURSOR_LEFT</autogen>
        <autogen>__KeyToKey__ KeyCode::J, KeyCode::CURSOR_DOWN</autogen>
        <autogen>__KeyToKey__ KeyCode::K, KeyCode::CURSOR_UP</autogen>
        <autogen>__KeyToKey__ KeyCode::L, KeyCode::CURSOR_RIGHT</autogen>
      </block>

      <block>
        <uielementrole_only>AXMenu</uielementrole_only>
        <modifier_only>
          ModifierFlag::NONE,
          ModifierFlag::SHIFT_L | ModifierFlag::NONE,
          ModifierFlag::SHIFT_R | ModifierFlag::NONE,
        </modifier_only>
        <autogen>__KeyToKey__ KeyCode::H, KeyCode::CURSOR_LEFT</autogen>
        <autogen>__KeyToKey__ KeyCode::J, KeyCode::CURSOR_DOWN</autogen>
        <autogen>__KeyToKey__ KeyCode::K, KeyCode::CURSOR_UP</autogen>
        <autogen>__KeyToKey__ KeyCode::L, KeyCode::CURSOR_RIGHT</autogen>
      </block>

      <block>
        <only>MAIL</only>
        <!-- Mail body editor is AXWebArea -->
        <uielementrole_not>AXTextField, AXTextArea, AXWebArea</uielementrole_not>
        <modifier_only>
          ModifierFlag::NONE,
          ModifierFlag::SHIFT_L | ModifierFlag::NONE,
          ModifierFlag::SHIFT_R | ModifierFlag::NONE,
        </modifier_only>
        <autogen>__KeyToKey__ KeyCode::H, KeyCode::CURSOR_LEFT</autogen>
        <autogen>__KeyToKey__ KeyCode::J, KeyCode::CURSOR_DOWN</autogen>
        <autogen>__KeyToKey__ KeyCode::K, KeyCode::CURSOR_UP</autogen>
        <autogen>__KeyToKey__ KeyCode::L, KeyCode::CURSOR_RIGHT</autogen>
      </block>
    </item>

    <item>
      <name>Enable in Xcode.</name>
      <identifier>remap.leon_hjkl_arrow_xcode</identifier>
      <only>XCODE</only>
      <uielementrole_not>AXTextField, AXTextArea</uielementrole_not>
      <modifier_only>
        ModifierFlag::NONE,
        ModifierFlag::SHIFT_L | ModifierFlag::NONE,
        ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      </modifier_only>
      <autogen>__KeyToKey__ KeyCode::H, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::J, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::K, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::L, KeyCode::CURSOR_RIGHT</autogen>
    </item>
  </item>
  <item>
    <name>Customized: Use "Hyper+hjkl" keys as arrow keys</name>
    <item>
      <name>Hyper J to Down</name>
      <appendix>(Hyper-J to Down arrow)</appendix>
      <identifier>private.hyper-j-down</identifier>
      <autogen>
        --KeyToKey--
        KeyCode::J,
        ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_DOWN
      </autogen>
    </item>
    <item>
      <name>Hyper K to Up</name>
      <appendix>(Hyper-K to Up arrow)</appendix>
      <identifier>private.hyper-k-up</identifier>
      <autogen>
        --KeyToKey--
        KeyCode::K,
        ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_UP
      </autogen>
    </item>
    <item>
      <name>Hyper H to Left</name>
      <appendix>(Hyper-H to Left arrow)</appendix>
      <identifier>private.hyper-h-left</identifier>
      <autogen>
        --KeyToKey--
        KeyCode::H,
        ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_LEFT
      </autogen>
    </item>
    <item>
      <name>Hyper L to Right</name>
      <appendix>(Hyper-L to Right arrow)</appendix>
      <identifier>private.hyper-l-right</identifier>
      <autogen>
        --KeyToKey--
        KeyCode::L,
        ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_RIGHT
      </autogen>
    </item>
  </item>

  <item>
    <name>Customized: Switch Input Method</name>
    <item>
      <name>COMMAND_R Keys to Switch Input Method</name>
      <appendix>COMMAND_R keys to F18 on OS X</appendix>
      <appendix>(Works well with setting F18 to switch input method in System Preferences)</appendix>
      <identifier>private.command_l_to_switch_input_method</identifier>
      <block>
        <!-- COMMAND_L -->
        <modifier_not>
          ModifierFlag::SHIFT_L, ModifierFlag::SHIFT_R,
          ModifierFlag::OPTION_L, ModifierFlag::OPTION_R,
          ModifierFlag::CONTROL_L, ModifierFlag::CONTROL_R,
          ModifierFlag::COMMAND_L
        </modifier_not>
        <autogen>
          __KeyOverlaidModifier__
        <!-- from -->
        KeyCode::COMMAND_R,
        <!-- hold -->
        KeyCode::COMMAND_R,
        <!-- tap -->
        KeyCode::F18
        </autogen>
        </block>
        <block>
      </block>
    </item>


  </item>
</root>
